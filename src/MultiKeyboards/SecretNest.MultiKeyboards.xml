<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SecretNest.MultiKeyboards</name>
    </assembly>
    <members>
        <member name="T:SecretNest.MultiKeyboards.Combiner">
            <summary>
            Building text from key input.
            </summary>
        </member>
        <member name="E:SecretNest.MultiKeyboards.Combiner.TextCombined">
            <summary>
            Occurs while a text is combined.
            </summary>
        </member>
        <member name="M:SecretNest.MultiKeyboards.Combiner.ClearAllBuffers">
            <summary>
            Clear all buffers.
            </summary>
        </member>
        <member name="M:SecretNest.MultiKeyboards.Combiner.ClearBuffer(System.IntPtr[])">
            <summary>
            Clear buffer of the handle specified.
            </summary>
            <param name="handle">Handle of the buffer to be cleared.</param>
        </member>
        <member name="M:SecretNest.MultiKeyboards.Combiner.#ctor(SecretNest.MultiKeyboards.CodeAppendingCallback)">
            <summary>
            Initializes an instance of Combiner, using user defined strategy.
            </summary>
            <param name="codeAppendCallback"></param>
        </member>
        <member name="M:SecretNest.MultiKeyboards.Combiner.AppendKey(System.IntPtr,SecretNest.MultiKeyboards.KeyInfo)">
            <summary>
            Append a key to a buffer.
            </summary>
            <param name="handle">Handle of the buffer to be appended on.</param>
            <param name="keyInfo">Key to be appended.</param>
        </member>
        <member name="M:SecretNest.MultiKeyboards.Combiner.#ctor">
            <summary>
            Initializes an instance of Combiner, using number only bar code strategy.
            </summary>
        </member>
        <member name="T:SecretNest.MultiKeyboards.CodeAppendingCallback">
            <summary>
            Represents an action for appending text to the buffer.
            </summary>
            <param name="keyInfo">New key to be added.</param>
            <param name="isPackageFinished">Whether the bar code is finished.</param>
            <returns>The text to be appended to the buffer.</returns>
        </member>
        <member name="T:SecretNest.MultiKeyboards.KeyboardDeviceInfo">
            <summary>
            Represents information of a keyboard device.
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyboardDeviceInfo.Handle">
            <summary>
            Gets the handle of the keyboard device.
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyboardDeviceInfo.Name">
            <summary>
            Gets the device name of the keyboard device.
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyboardDeviceInfo.Type">
            <summary>
            Gets the type of the keyboard device.
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyboardDeviceInfo.Description">
            <summary>
            Gets the description of the keyboard device from registry.
            </summary>
        </member>
        <member name="M:SecretNest.MultiKeyboards.KeyboardDeviceInfo.ToString">
            <summary>
            Returns a string that represents the current keyboard.
            </summary>
            <returns>A string that represents the current keyboard.</returns>
        </member>
        <member name="T:SecretNest.MultiKeyboards.KeyboardDeviceType">
            <summary>
            Keyboard device type
            </summary>
        </member>
        <member name="F:SecretNest.MultiKeyboards.KeyboardDeviceType.Keyboard">
            <summary>
            Keyboard
            </summary>
        </member>
        <member name="F:SecretNest.MultiKeyboards.KeyboardDeviceType.Hid">
            <summary>
            HID device
            </summary>
        </member>
        <member name="F:SecretNest.MultiKeyboards.KeyboardDeviceType.Other">
            <summary>
            Other
            </summary>
        </member>
        <member name="T:SecretNest.MultiKeyboards.Keyboards">
            <summary>
            Provides methods to get all keyboard devices and start catching keyboard input messages.
            </summary>
        </member>
        <member name="M:SecretNest.MultiKeyboards.Keyboards.Get">
            <summary>
            Gets the list of all keyboard devices.
            </summary>
            <returns>List of all keyboard devices</returns>
        </member>
        <member name="M:SecretNest.MultiKeyboards.Keyboards.StartCatching(System.IntPtr,System.Boolean)">
            <summary>
            Starts catching input messages from keyboards.
            </summary>
            <param name="handle">The handle of the receiver (form) which will process the caught messages.</param>
            <param name="captureWhileActiveOnly">Whether the catching should be taken while the receiver window is active in foreground only.</param>
        </member>
        <member name="E:SecretNest.MultiKeyboards.Keyboards.KeyStateChanged">
            <summary>
            Occurs while a key state is changed.
            </summary>
        </member>
        <member name="M:SecretNest.MultiKeyboards.Keyboards.#ctor(System.IntPtr)">
            <summary>
            Initializes an instance of Keyboards.
            </summary>
            <param name="handle">The handle of the receiver (form) which will process the caught messages.</param>
        </member>
        <member name="M:SecretNest.MultiKeyboards.Keyboards.Dispose">
            <summary>
            Performs tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:SecretNest.MultiKeyboards.KeyInfo">
            <summary>
            Represents an key message.
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyInfo.Handle">
            <summary>
            Gets the handle of the keyboard device.
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyInfo.IsPressed">
            <summary>
            Gets whether the key is pressed.
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyInfo.MakeCode">
            <summary>
            Gets the scan code from the key depression.
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyInfo.Flags">
            <summary>
            Gets the flags, combining one or more of RI_KEY_MAKE, RI_KEY_BREAK, RI_KEY_E0, RI_KEY_E1
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyInfo.Message">
            <summary>
            Gets the corresponding Windows message for example (WM_KEYDOWN, WM_SYASKEYDOWN etc).
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyInfo.VKey">
            <summary>
            Gets the virtual Key Code.
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyInfo.Key">
            <summary>
            Gets the key pressed or released.
            </summary>
        </member>
        <member name="M:SecretNest.MultiKeyboards.KeyInfo.#ctor(System.IntPtr,System.UInt16,System.UInt16,System.UInt16,System.UInt32)">
            <summary>
            Initializes an instance of KeyInfo.
            </summary>
            <param name="handle">Handle of the keyboard device</param>
            <param name="makeCode">Scan code from the key depression</param>
            <param name="flags">One or more of RI_KEY_MAKE, RI_KEY_BREAK, RI_KEY_E0, RI_KEY_E1</param>
            <param name="vkey">Virtual key code</param>
            <param name="message">Corresponding Windows message for example (WM_KEYDOWN, WM_SYASKEYDOWN etc)</param>
        </member>
        <member name="T:SecretNest.MultiKeyboards.KeyStateChangedEventArgs">
            <summary>
            Represents the argument of the KeyStateChanged event.
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyStateChangedEventArgs.Handle">
            <summary>
            Gets the handle of the keyboard device.
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyStateChangedEventArgs.IsPressed">
            <summary>
            Gets whether the key is pressed.
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyStateChangedEventArgs.MakeCode">
            <summary>
            Gets the scan code from the key depression.
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyStateChangedEventArgs.Flags">
            <summary>
            Gets the flags, combining one or more of RI_KEY_MAKE, RI_KEY_BREAK, RI_KEY_E0, RI_KEY_E1
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyStateChangedEventArgs.Message">
            <summary>
            Gets the corresponding Windows message for example (WM_KEYDOWN, WM_SYASKEYDOWN etc).
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyStateChangedEventArgs.VKey">
            <summary>
            Gets the virtual Key Code.
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyStateChangedEventArgs.Key">
            <summary>
            Gets the key pressed or released.
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.KeyStateChangedEventArgs.KeyInfo">
            <summary>
            Gets the key message.
            </summary>
        </member>
        <member name="T:SecretNest.MultiKeyboards.TextCombinedEventArgs">
            <summary>
            Represents the argument of the TextCombined event.
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.TextCombinedEventArgs.Handle">
            <summary>
            Gets the handle of the source keyboard device.
            </summary>
        </member>
        <member name="P:SecretNest.MultiKeyboards.TextCombinedEventArgs.Text">
            <summary>
            Gets the combined text.
            </summary>
        </member>
    </members>
</doc>
